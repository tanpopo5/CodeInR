install.packages("swirl")
library(swirl)
install_from_swirl("R Programming Alt")
library("swirl")
swirl()
1+2
height <-2
height
width <-4
width
ls()
height*width
area <- height * width
area
TRUE
class(TRUE)
FALSE
class(NA)
T
F
2
2L
class(2L)
class(2)
getwd()
setwd(Doc)
setwd(/Users/tanpopo/Documents/College_study/R)
setwd("/Users/tanpopo/Documents/College_study/R")
getwd()
swirl()
5+7
x <- 5+7
x
x-3
y <- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?
c
z
z
c(z, 555, z)
z*2 + 100
z-1
sqrt(z-1)
my_sqrt -< sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- my_sqrt/z
my_div <- z/my_sqrt
my_div
c(1,2,3,4)
c(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+100
info()
bye()
x <-100
s
x
exp()
exp(e)
exp(i)
y <- (1+1/x)^x
y
n <-1
n
n <- n+1
n
n = n+1
n
seq(from = -9, to =20, by = 3)
a<-5
(1:a+1)
(1:(a+1)
)
source('~/Documents/College_study/R/test/p1.R')
source('~/Documents/College_study/R/test/p1.R')
n
source('~/Documents/College_study/R/test/p1.R')
b=(1:a+1)
b
#b
i<- c(1,2,3,4)
i<- c(1,2,3)
x<-(21:30)
length(i)
#b[1]
source('~/Documents/College_study/R/test/p1.R')
#b
#b
x <- seq(10, 200, by=10)
y <- (1+1/x)^x
tail(exp(1)-y)
x[]
x[]
x
source('~/Documents/College_study/R/test/p1.R')
x
plot(x,y, "o")
plot(x,y)
plot(x,y, "o")
x<-1:20
x%%4 == 0
x[x%%4==0]
(A <- matrix(1:10, nrow=2, ncol = 5, byrow = TRUE))
source('~/Documents/College_study/R/test/p1.R')
plot(x,y,col="yellow",type="l",lwd=2,xlab="",ylab="",axes=FALSE,asp=1)
plot(x,y,col="rainbow",type="l",lwd=2,xlab="",ylab="",axes=FALSE,asp=1)
plot(x,y,col="red",type="l",lwd=2,xlab="",ylab="",axes=FALSE,asp=1)
lines(x,y,col="red",type="l",lwd=2,xlab="",ylab="")
plot(x,y,col="blue",type="l",lwd=2,xlab="",ylab="",axes=FALSE,asp=1)
lines(x,y,col="red",type="l",lwd=2,xlab="",ylab="")
r<-sin(theta/4)^2 + cos(3*theta)^4 # parametric equation in polar coordinates
theta<-seq(0,4*pi,length.out = n) # a vector of size 1e3 of theta values
r<-sin(theta/6)^2 + cos(3*theta)^4 # parametric equation in polar coordinates
x<-r*cos(theta) # convert from polar to Cartesian coordinates
lines(x,y,col="red",type="l",lwd=2,xlab="",ylab="")
n<-1000 # number of points to plot
# add the second plot
x<-0.5*r*cos(theta + pi/2) - 2 # scale by 0.5, rotate by pi/2, shift left by 2
y<-0.5*r*sin(theta + pi/2) + 1.2 # scale by 0.5, rotate by pi/2, shift up by 1.2
lines(x,y,col="red",type="l",lwd=2,xlab="",ylab="")
source('~/Documents/College_study/R/test/p1.R')
source('~/Documents/College_study/R/test/p2.R')
plot(x,y,pch="|",col="blue",lwd=2,ylab="",xlab="",cex=1.5,axes = FALSE,ylim=c(-2.2,2.2))
plot(x,y,pch=".",col="blue",lwd=2,ylab="",xlab="",cex=1.5,axes = FALSE,ylim=c(-2.2,2.2))
plot(x,y,pch=".",col="blue",lwd=2,ylab="",xlab="",cex=1.5,axes = FALSE,ylim=c(-2.2,2.2))
# adding the fuzzy graph to the original one
points(jitter(x,amount = 0.1),jitter(y,amount = 0.2),pch=".",
col=rainbow(n),ylab="",xlab="",cex=1.5)
plot(x,y,pch="*",col="blue",lwd=2,ylab="",xlab="",cex=1.5,axes = FALSE,ylim=c(-2.2,2.2))
# adding the fuzzy graph to the original one
points(jitter(x,amount = 0.1),jitter(y,amount = 0.2),pch=".",
col=rainbow(n),ylab="",xlab="",cex=1.5)
n<-1e4 # number of points
# function values
# plotting the graph of the function
# adding the fuzzy graph to the original one
col=rainbow(n),ylab="",xlab="",cex=1.5)
y<-sin(x)+sin(2*x) # a vector of y-values of size 10,000
points(jitter(x,amount = 0.1),jitter(y,amount = 0.2),pch=".",
plot(x,y,pch="*",col="blue",lwd=2,ylab="",xlab="",cex=1.5,axes = FALSE,ylim=c(-2.2,2.2))
x<-seq(-pi,pi,len=1e4) # a vector of x-values of size 10,000
.
source('~/Documents/College_study/R/test/p2.R', echo=TRUE)
source('~/Documents/College_study/R/test/p2.R', echo=TRUE)
swirl()
z*2+100
info()
z*2+1000
my_div
source('~/Documents/College_study/R/test/p1.R', echo=TRUE)
y<-0.5*r*sin(theta + pi/4) + 1.2 # scale by 0.5, rotate by pi/2, shift up by 1.2
x<-0.5*r*cos(theta + pi/4) - 1 # scale by 0.5, rotate by pi/2, shift left by 2
y<-0.5*r*sin(theta + pi/4) + 1.0 # scale by 0.5, rotate by pi/2, shift up by 1.2
source('~/Documents/College_study/R/test/p1.R', echo=TRUE)
source('~/Documents/College_study/R/test/p1.R', echo=TRUE)
source('~/Documents/College_study/R/test/p1.R', echo=TRUE)
swirl()
Sys.Date()
mean() <- c(2,4,5)
mean(c(2,4,5))
submit()
submit(2)
submit()
boring_function('My first function!')
boring_function()
boring_function
submit(c(1,4,6))
submit()
submit(c(1,4,6))
submit()
submit(c(1,4,6))
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
submit()
submit(4,6)
exit
0
exit
quit
0
swirl_options()
exit 0
exit
submit()
submit()
